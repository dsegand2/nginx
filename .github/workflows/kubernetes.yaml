name: kubernetes
on: 
  push:
    branches: 
    - dev
jobs:
  kubernetes:
    env:
      mode: kubernetes
    runs-on: ubuntu-18.04
    steps:
      -
        uses: actions/checkout@v2
      -
        run: |
          set -x

          version="1.18.10-00"
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo deb http://apt.kubernetes.io/ kubernetes-xenial main | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubelet=$version kubeadm=$version kubectl=$version --allow-downgrades

          ip=$( ip r | grep default | awk '{ print $9 }' )
          sudo swapoff -a
          sudo kubeadm init --apiserver-advertise-address $ip --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all

          mkdir -p $HOME/.kube
          sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          kubectl apply -f https://docs.projectcalico.org/v3.16/manifests/calico.yaml
          echo "source <(kubectl completion bash)" >> ~/.bashrc
          master=$( kubectl get node | grep master | awk '{ print $1 }' )
          kubectl taint node $master node-role.kubernetes.io/master:NoSchedule-

          docker build -t openshiftacademiaonline/nginx-dev:latest --no-cache .
          docker history openshiftacademiaonline/nginx-dev:latest              

          project=$(basename $GITHUB_REPOSITORY)
          compose=etc/$mode/$project.yaml

          sudo cp -rv run/* /run
          for config in $( find /run/configs -type f );
            do
              file=$( basename $config );
              kubectl create configmap $file --from-file $config;
              sudo rm -f $config;
            done;
          for secret in $( find /run/secrets -type f );
            do
              file=$( basename $secret );
              kubectl create secret generic $file --from-file $secret;
              sudo rm -f $secret;
            done;        

          #kubectl apply -f $compose
          kubectl apply -f etc/kubernetes/nginx-deploy.yaml

          while true
            do
              sleep 10
              kubectl get deploy
              kubectl get deploy | grep '\([0-9]\)/\1' && break
            done        
